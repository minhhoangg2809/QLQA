<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Quanly_quanan.Src"
                    xmlns:MaterialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:MaterialDesignColor="http://materialdesigninxaml.net/winfx/xaml/colors">

    <Style x:Key="OutlineButton_Success" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="Green"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="Width"  Value="auto"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Foreground" Value="Green"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Opacity" Value="1"></Setter>
        <Setter Property="BorderThickness" Value="3"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  CornerRadius="5"  Background="{TemplateBinding Background}"
                                            BorderThickness="2" BorderBrush="{TemplateBinding Foreground}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OutlineButton_Warning" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="Orange"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="Width"  Value="auto"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Foreground" Value="Orange"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Opacity" Value="1"></Setter>
        <Setter Property="BorderThickness" Value="3"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  CornerRadius="5"  Background="{TemplateBinding Background}"
                                            BorderThickness="2" BorderBrush="{TemplateBinding Foreground}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OutlineButton_Primary" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="#FF5C99D6"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="Width"  Value="auto"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Foreground" Value="#FF5C99D6"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Opacity" Value="1"></Setter>
        <Setter Property="BorderThickness" Value="3"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  CornerRadius="5"  Background="{TemplateBinding Background}"
                                            BorderThickness="2" BorderBrush="{TemplateBinding Foreground}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OutlineButton_Danger" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="Red"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"></Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Height" Value="auto"></Setter>
        <Setter Property="Width"  Value="auto"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Foreground" Value="Red"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="Opacity" Value="1"></Setter>
        <Setter Property="BorderThickness" Value="3"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  CornerRadius="5"  Background="{TemplateBinding Background}"
                                            BorderThickness="2" BorderBrush="{TemplateBinding Foreground}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundToggle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Gray"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
            </Trigger>
        </Style.Triggers>
       
        <Setter Property="Height" Value="100"></Setter>
        <Setter Property="Width"  Value="100"></Setter>
        <Setter Property="Background" Value="WhiteSmoke"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="FontWeight" Value="SemiBold"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Opacity" Value="1"></Setter>

        <Setter Property="BorderThickness" Value="5"></Setter>
        <Setter Property="BorderBrush" Value="#FF5C99D6"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border  CornerRadius="40"  Background="{TemplateBinding Background}"
                                            BorderThickness="2" BorderBrush="{TemplateBinding Foreground}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>